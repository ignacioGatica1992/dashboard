# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZqYeDTA_usGL5LmFdxxdKvlrZO1vIucF
"""

import pandas as pd
import numpy as np
data = {
    'fecha': pd.date_range(start='2024-01-01', periods=100, freq='D'),
    'demanda_transporte': np.random.randint(50, 150, size=100),
    'disponibilidad_recursos': np.random.randint(70, 120, size=100),
    'estado_vias': np.random.choice(['Buena', 'Regular', 'Mala'], size=100),
    'condiciones_meteorologicas': np.random.choice(['Soleado', 'Nublado', 'Lluvioso'], size=100),
    'volumen_carga_transportada': np.random.randint(50, 150, size=100)
}

df = pd.DataFrame(data)

df.to_csv('base_datos_transporte.csv', index=False)

df.head()

import pandas as pd
df = pd.read_csv('base_datos_transporte.csv')
print(df.head())
print(df.info())
print(df.isnull().sum())
df['estado_vias'] = df['estado_vias'].fillna('Buena')
df['condiciones_meteorologicas'] = df['condiciones_meteorologicas'].fillna('Soleado')

import matplotlib.pyplot as plt
estado_vias_counts = df['estado_vias'].value_counts()
plt.figure(figsize=(8, 6))
estado_vias_counts.plot(kind='bar', color='skyblue')
plt.xlabel('Estado de las Vías')
plt.ylabel('Frecuencia')
plt.title('Distribución del Estado de las Vías')
plt.show()

condiciones_meteorologicas_counts = df['condiciones_meteorologicas'].value_counts()
plt.figure(figsize=(8, 6))
condiciones_meteorologicas_counts.plot(kind='bar', color='orange')
plt.xlabel('Condiciones Meteorológicas')
plt.ylabel('Frecuencia')
plt.title('Distribución de las Condiciones Meteorológicas')
plt.show()

plt.figure(figsize=(8, 6))
plt.hist(df['volumen_carga_transportada'], bins=10, color='green', edgecolor='black')
plt.xlabel('Volumen de Carga Transportada (Toneladas)')
plt.ylabel('Frecuencia')
plt.title('Distribución del Volumen de Carga Transportada')
plt.show()

plt.figure(figsize=(10, 6))
plt.bar(df.index, df['demanda_transporte'], width=0.4, label='Demanda de Transporte', align='center')
plt.bar(df.index + 0.4, df['disponibilidad_recursos'], width=0.4, label='Disponibilidad de Recursos', align='center', color='red')
plt.xlabel('Índice')
plt.ylabel('Cantidad')
plt.title('Comparación de Demanda de Transporte y Disponibilidad de Recursos')
plt.legend()
plt.show()

pip install streamlit

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
df = pd.read_csv('base_datos_transporte.csv')
st.title('Dashboard de Planificación de Transporte de FCAB')
st.header('Distribución del Estado de las Vías')
estado_vias_counts = df['estado_vias'].value_counts()
fig, ax = plt.subplots()
estado_vias_counts.plot(kind='bar', color='skyblue', ax=ax)
ax.set_xlabel('Estado de las Vías')
ax.set_ylabel('Frecuencia')
ax.set_title('Distribución del Estado de las Vías')
st.pyplot(fig)
st.header('Distribución de las Condiciones Meteorológicas')
condiciones_meteorologicas_counts = df['condiciones_meteorologicas'].value_counts()
fig, ax = plt.subplots()
condiciones_meteorologicas_counts.plot(kind='bar', color='orange', ax=ax)
ax.set_xlabel('Condiciones Meteorológicas')
ax.set_ylabel('Frecuencia')
ax.set_title('Distribución de las Condiciones Meteorológicas')
st.pyplot(fig)
st.header('Distribución del Volumen de Carga Transportada')
fig, ax = plt.subplots()
ax.hist(df['volumen_carga_transportada'], bins=10, color='green', edgecolor='black')
ax.set_xlabel('Volumen de Carga Transportada (Toneladas)')
ax.set_ylabel('Frecuencia')
ax.set_title('Distribución del Volumen de Carga Transportada')
st.pyplot(fig)
st.header('Comparación de Demanda de Transporte y Disponibilidad de Recursos')
fig, ax = plt.subplots(figsize=(10, 6))
ax.bar(df.index, df['demanda_transporte'], width=0.4, label='Demanda de Transporte', align='center')
ax.bar(df.index + 0.4, df['disponibilidad_recursos'], width=0.4, label='Disponibilidad de Recursos', align='center', color='red')
ax.set_xlabel('Índice')
ax.set_ylabel('Cantidad')
ax.set_title('Comparación de Demanda de Transporte y Disponibilidad de Recursos')
ax.legend()
st.pyplot(fig)